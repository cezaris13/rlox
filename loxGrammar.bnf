<expression> ::= <literal> | <unary> | <grouping> | <binary>

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<integer> ::= <digit>+
<number> ::= <integer> "." <digit>+ | <integer>


<letter> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
          | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<string> ::= (<letter> | <digit>)*
<literal> ::= <number> | <string> | "true" | "false" | "nil"
<grouping> ::= "(" <expression> ")"
<unary> ::= ("-" | "!") <expression>
<binary> ::= <expression> <operator> <expression>

<operator> ::= "==" | "!=" | "<" | "<=" | ">" | ">=" | "+"  | "-" | "*" | "/"

;; version 2

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<integer> ::= <digit>+
<number> ::= <integer> "." <digit>+ | <integer>


<letter> ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"
          | "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z"

<string> ::= (<letter> | <digit>)*


<expression> ::= <equality>
<equality> ::= <comparison> ( ("==" | "!=") <comparison>)*
<comparison> ::= <term> ( (">" | "<" | ">=" | "<=") <term>)*
<term> ::= <factor> ( ("-" | "+") <factor> )*
<factor> ::= <unary> ( ("/" | "*") <unary> )*
<unary> ::= ("-" | "!") <unary> | <primary>
<primary> ::= <number> | <string> | "true" | "false" | "nil" | "(" <expression> ")"

;; update with statements and print
<eof> ::= "\0"

<program> ::= <statement>* <eof>

<statement> ::= <printStatement> | <expressionStatement>

<expressionStatement> ::= <expression> ";"
<printStatement> ::= "print" <expression> ";"
